{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAOA,MAAMC,EAAOC,SAASC,cAAc,UAC5BC,UAAUC,MAAEC,EAAKC,KAAEC,EAAIC,OAAEC,IAAaT,EAK9C,SAASU,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,EAAUP,MAAAQ,IAEpBG,EAAO,C,SAAEJ,EAAUP,MAAAQ,GAAQ,GAE5BA,EAAM,G,CAZbZ,EAAKmB,iBAAiB,SAAUC,UAiBhCC,iBAAiBF,iBAAiB,UAAUG,IAC1CA,EAAEC,iBACF,IAAIC,EAAaC,OAAOpB,EAAMqB,OAC1BC,EAAYF,OAAOlB,EAAKmB,OAC5B,IAAK,IAAIE,EAAI,EAAGA,EAAInB,EAAOiB,MAAOE,IAChClB,EAAc,EAAIkB,EAAGJ,EAAaI,EAAID,GACnCE,MAAK,EAAClB,SAAEA,EAAUP,MAAA0B,MACjBC,EAAAjC,GAASkC,OAAOC,QACd,uBAAqBtB,QAAiBmB,MAAU,IAGnDI,OAAM,EAACvB,SAAEA,EAAUP,MAAA+B,MAClBJ,EAAAjC,GAASkC,OAAOI,QACd,sBAAoBzB,QAAewB,MAAU,GAE/C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n// const delay = document.querySelector('input[name=\"delay\"]');\n// const step = document.querySelector('input[name=\"step\"]');\n// const amount = document.querySelector('input[name=\"amount\"]');\n// const btnCreatePromise = document.querySelector('button[type=\"submit\"]');\n\n\nconst form = document.querySelector(\".form\")\nconst { elements: { delay, step, amount } } = form;\n\nform.addEventListener('submit', onSubmit)\n\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nbtnCreatePromise.addEventListener('submit', e => {\n  e.preventDefault();\n  let firstDelay = Number(delay.value);\n  let delayStep = Number(step.value);\n  for (let i = 0; i < amount.value; i++) {\n    createPromise(1 + i, firstDelay + i * delayStep)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","elements","delay","$47d4ff9957288465$var$delay","step","$47d4ff9957288465$var$step","amount","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay1","Promise","resolve","reject","setTimeout","Math","random","addEventListener","onSubmit","btnCreatePromise","e","preventDefault","firstDelay","Number","value","delayStep","i","then","delay2","$parcel$interopDefault","Notify","success","catch","delay3","failure"],"version":3,"file":"03-promises.13e138b2.js.map"}