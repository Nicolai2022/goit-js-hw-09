{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAOMC,EAAOC,SAASC,cAAc,SACpCC,EAA8CH,EAAtCI,SAAYC,EAAKF,EAALG,MAAOC,EAAIJ,EAAJK,KAAMC,EAAMN,EAANO,OAKjC,SAASC,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUN,MAAAO,IAEpBG,EAAO,CAAEJ,WAAUN,MAAAO,G,GAEpBA,E,IAZPb,EAAKoB,iBAAiB,SAAUC,UAiBhCC,iBAAiBF,iBAAiB,UAAU,SAAAG,GAC1CA,EAAEC,iBAGF,IAFA,IAAIC,EAAaC,OAAOrB,EAAMsB,OAC1BC,EAAYF,OAAOnB,EAAKoB,OACnBE,EAAI,EAAGA,EAAIpB,EAAOkB,MAAOE,IAChClB,EAAc,EAAIkB,EAAGJ,EAAaI,EAAID,GACnCE,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUoB,EAAKD,EAALzB,MACjB2B,EAAAnC,GAASoC,OAAOC,QACd,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANJ,EAAM,M,IAGjDK,OAAM,SAAAN,G,IAAGnB,EAAQmB,EAARnB,SAAU0B,EAAKP,EAALzB,MAClB2B,EAAAnC,GAASoC,OAAOK,QACd,sBAAqCH,OAAfxB,EAAS,QAAYwB,OAANE,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n// const delay = document.querySelector('input[name=\"delay\"]');\n// const step = document.querySelector('input[name=\"step\"]');\n// const amount = document.querySelector('input[name=\"amount\"]');\n// const btnCreatePromise = document.querySelector('button[type=\"submit\"]');\n\n\nconst form = document.querySelector(\".form\")\nconst { elements: { delay, step, amount } } = form;\n\nform.addEventListener('submit', onSubmit)\n\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nbtnCreatePromise.addEventListener('submit', e => {\n  e.preventDefault();\n  let firstDelay = Number(delay.value);\n  let delayStep = Number(step.value);\n  for (let i = 0; i < amount.value; i++) {\n    createPromise(1 + i, firstDelay + i * delayStep)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$_elements","elements","$ce04d3a99e08e73b$var$delay","delay","$ce04d3a99e08e73b$var$step","step","$ce04d3a99e08e73b$var$amount","amount","$ce04d3a99e08e73b$var$createPromise","position","delay1","Promise","resolve","reject","setTimeout","Math","random","addEventListener","onSubmit","btnCreatePromise","e","preventDefault","firstDelay","Number","value","delayStep","i","then","param","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure"],"version":3,"file":"03-promises.715b88ed.js.map"}